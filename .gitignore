# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is common to ignore PyCharm project files unless needed for team collaboration.
.idea/

# VS Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

## Específicos do projeto KPIs Agent

# Bancos de dados locais
*.db
*.sqlite
*.sqlite3
database.db
Chinook.sqlite

# Dados sensíveis e arquivos de configuração
.env
*.env
config.json
credentials.json
secrets.json

# Arquivos de dados e planilhas com informações sensíveis
*.csv
*.xlsx
*.xls
/Planilhas/
/data/
/dados/

# Modelos treinados e cache de ML
models/
*.pkl
*.pickle
*.joblib
*.h5
*.pth
*.pt
*.onnx
/hist/
/hist_*/
*.model

# Logs e arquivos temporários
*.log
logs/
temp/
tmp/
cache/

# Arquivos de histórico e sessões
hist_*/
historico_*
session_*

# Arquivos de backup
*.bak
*.backup
*.old

# Arquivos comprimidos de desenvolvimento
*.zip
*.tar.gz
*.rar
!projeto.zip
!soliris.zip

# Arquivos do sistema
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
*.tmp

# Arquivos de configuração local
local_config.py
local_settings.py
development.py

# Diretórios específicos do projeto
/interface/auth/__pycache__/
/interface/components/__pycache__/
/interface/utils/__pycache__/
/src/__pycache__/
/src/vanna_core/__pycache__/

# Arquivos de zona do Windows
*.Zone.Identifier

# Relatórios gerados automaticamente
relatorios_gerados/
reports/output/
*.pdf
!*.pdf

# Arquivos de integração com APIs (podem conter tokens)
hubspot_*.json
api_keys.json
integration_config.json

# Ignorar arquivos de documentação e relatórios por padrão
*.pdf
*.txt
*.md
!README.md
!requirements.txt
